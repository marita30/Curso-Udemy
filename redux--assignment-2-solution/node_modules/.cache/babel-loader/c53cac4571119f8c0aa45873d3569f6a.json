{"ast":null,"code":"import * as actionTypes from './actions';\nconst initialState = {\n  persons: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_PERSON:\n      const newPerson = {\n        id: Math.random(),\n        // not really unique but good enough here!\n        name: 'Max',\n        age: Math.floor(Math.random() * 40)\n      };\n      return { ...state,\n        persons: state.persons.concat(newPerson)\n      };\n\n    case actionTypes.REMOVE_PERSON:\n      return { ...state,\n        persons: state.persons.filter(person => person.id !== action.personId)\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/mj/Desktop/Curso Udemy/redux--assignment-2-solution/src/store/reducer.js"],"names":["actionTypes","initialState","persons","reducer","state","action","type","ADD_PERSON","newPerson","id","Math","random","name","age","floor","concat","REMOVE_PERSON","filter","person","personId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAAEC,KAAK,GAAGH,YAAV,EAAwBI,MAAxB,KAAoC;AAChD,UAASA,MAAM,CAACC,IAAhB;AACI,SAAKN,WAAW,CAACO,UAAjB;AACI,YAAMC,SAAS,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADU;AACK;AACnBC,QAAAA,IAAI,EAAE,KAFQ;AAGdC,QAAAA,GAAG,EAAEH,IAAI,CAACI,KAAL,CAAYJ,IAAI,CAACC,MAAL,KAAgB,EAA5B;AAHS,OAAlB;AAKA,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAca,MAAd,CAAsBP,SAAtB;AAFN,OAAP;;AAIJ,SAAKR,WAAW,CAACgB,aAAjB;AACI,aAAO,EACH,GAAGZ,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAce,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACT,EAAP,KAAcJ,MAAM,CAACc,QAApD;AAFN,OAAP;AAZR;;AAiBA,SAAOf,KAAP;AACH,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './actions';\n\nconst initialState = {\n    persons: []\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_PERSON:\n            const newPerson = {\n                id: Math.random(), // not really unique but good enough here!\n                name: 'Max',\n                age: Math.floor( Math.random() * 40 )\n            }\n            return {\n                ...state,\n                persons: state.persons.concat( newPerson )\n            }\n        case actionTypes.REMOVE_PERSON:\n            return {\n                ...state,\n                persons: state.persons.filter(person => person.id !== action.personId)\n            }\n    }\n    return state;\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}