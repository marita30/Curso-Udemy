{"ast":null,"code":"var _jsxFileName = \"/home/mj/Desktop/Curso Udemy/redux--assignment-2-solution/src/containers/Persons.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Person from '../components/Person/Person';\nimport AddPerson from '../components/AddPerson/AddPerson';\nimport * as actionTypes from '../store/actions';\n\nclass Persons extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AddPerson, {\n      personAdded: this.props.onAddedPerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }), this.props.prs.map(person => /*#__PURE__*/React.createElement(Person, {\n      key: person.id,\n      name: person.name,\n      age: person.age,\n      clicked: () => this.props.onRemovedPerson(person.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    prs: state.persons\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddedPerson: () => dispatch({\n      type: actionTypes.ADD_PERSON\n    }),\n    onRemovedPerson: id => dispatch({\n      type: actionTypes.REMOVE_PERSON,\n      personId: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);","map":{"version":3,"sources":["/home/mj/Desktop/Curso Udemy/redux--assignment-2-solution/src/containers/Persons.js"],"names":["React","Component","connect","Person","AddPerson","actionTypes","Persons","render","props","onAddedPerson","prs","map","person","id","name","age","onRemovedPerson","mapStateToProps","state","persons","mapDispatchToProps","dispatch","type","ADD_PERSON","REMOVE_PERSON","personId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAE5BM,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKD,KAAL,CAAWE,GAAX,CAAeC,GAAf,CAAmBC,MAAM,iBACtB,oBAAC,MAAD;AACI,MAAA,GAAG,EAAEA,MAAM,CAACC,EADhB;AAEI,MAAA,IAAI,EAAED,MAAM,CAACE,IAFjB;AAGI,MAAA,GAAG,EAAEF,MAAM,CAACG,GAHhB;AAII,MAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAWQ,eAAX,CAA2BJ,MAAM,CAACC,EAAlC,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAFL,CADJ;AAYH;;AAf2B;;AAkBhC,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHR,IAAAA,GAAG,EAAEQ,KAAK,CAACC;AADR,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHZ,IAAAA,aAAa,EAAE,MAAMY,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEjB,WAAW,CAACkB;AAAnB,KAAD,CAD1B;AAEHP,IAAAA,eAAe,EAAGH,EAAD,IAAQQ,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEjB,WAAW,CAACmB,aAAnB;AAAkCC,MAAAA,QAAQ,EAAEZ;AAA5C,KAAD;AAF9B,GAAP;AAIH,CALD;;AAOA,eAAeX,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Person from '../components/Person/Person';\nimport AddPerson from '../components/AddPerson/AddPerson';\nimport * as actionTypes from '../store/actions';\n\nclass Persons extends Component {\n    \n    render () {\n        return (\n            <div>\n                <AddPerson personAdded={this.props.onAddedPerson} />\n                {this.props.prs.map(person => (\n                    <Person \n                        key={person.id}\n                        name={person.name} \n                        age={person.age} \n                        clicked={() => this.props.onRemovedPerson(person.id)}/>\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        prs: state.persons\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddedPerson: () => dispatch({type: actionTypes.ADD_PERSON}),\n        onRemovedPerson: (id) => dispatch({type: actionTypes.REMOVE_PERSON, personId: id})\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);"]},"metadata":{},"sourceType":"module"}