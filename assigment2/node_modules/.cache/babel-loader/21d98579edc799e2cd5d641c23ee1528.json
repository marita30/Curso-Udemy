{"ast":null,"code":"var _jsxFileName = \"/home/mj/Desktop/Curso Udemy/assigment2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Validation from './Validation/Validation';\nimport Char from './Char/Char';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      /* Declaras una variable llamada userInput */\n      userInput: ''\n    };\n\n    this.inputChangedHandler = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const charList = this.state.userInput.split('').map(char => {\n      return React.createElement(Char, {\n        character: char,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" create an input field (in App component) with a change listener which outputs the length of the entered text below it(e.g in a pharagraph)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Create a new component(=>ValidationComponent) which receives the text length as a prop\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Inside the validationComponent, either output \\\"Text long enough\\\" depending on the text length (e.g. take 5 as a minimun length) \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" Create another component (=> CharComponent) and style it as an inline box(=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Render a list of CharComponent where each CharComponent receives a different letter of the entered text(in the initial input fiel) as a prop\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"When you click a CharComponent, it should be removed from the entered text.\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Hint: Keep in mind that Javascript strings are basically array!\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.inputChangedHandler,\n      value: this.state.userInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.userInput), React.createElement(Validation, {\n      inputLength: this.state.userInput.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), charList);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mj/Desktop/Curso Udemy/assigment2/src/App.js"],"names":["React","Component","Validation","Char","App","state","userInput","inputChangedHandler","event","setState","target","value","render","charList","split","map","char","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEC,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACN;AACAC,MAAAA,SAAS,EAAE;AAFL,KADmB;;AAAA,SAM3BC,mBAN2B,GAMJC,KAAD,IAAW;AAC/B,WAAKC,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd;AACD,KAR0B;AAAA;;AAU1BC,EAAAA,MAAM,GAAG;AAEP,UAAMC,QAAQ,GAAG,KAAKR,KAAL,CAAWC,SAAX,CAAqBQ,KAArB,CAA2B,EAA3B,EAA+BC,GAA/B,CAAmCC,IAAI,IAAI;AAC1D,aAAO,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFgB,CAAjB;AAIC,WAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qJADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4IAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kLAJD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sJALD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAND,CADF,EASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEATD,EAWC;AAAO,MAAA,IAAI,EAAC,MAAZ;AACE,MAAA,QAAQ,EAAE,KAAKT,mBADjB;AAEE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,SAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXD,EAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWC,SAAf,CAhBD,EAmBC,oBAAE,UAAF;AAAa,MAAA,WAAW,EAAG,KAAKD,KAAL,CAAWC,SAAX,CAAqBW,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBD,EAoBEJ,QApBF,CAFF;AA0BD;;AA1CwB;;AA6C7B,eAAeT,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Validation from './Validation/Validation';\nimport Char from './Char/Char';\n\n class App extends Component {\n  state = {\n    /* Declaras una variable llamada userInput */\n    userInput: ''\n  }\n   /* Cambia el valor de la variable userInput */\n  inputChangedHandler = (event) => {\n    this.setState({userInput: event.target.value});\n  }\n\n   render() {\n\n     const charList = this.state.userInput.split('').map(char => {\n       return <Char character={char} />\n     });\n\n      return (\n\n        <div className=\"App\">\n          <ol>\n           <li> create an input field (in App component) with a change listener which outputs the length of the entered text below it(e.g in a pharagraph)</li>\n           <li>Create a new component(=>ValidationComponent) which receives the text length as a prop</li>\n           <li>Inside the validationComponent, either output \"Text long enough\" depending on the text length (e.g. take 5 as a minimun length) </li>\n           <li> Create another component (=> CharComponent) and style it as an inline box(=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid.</li>\n           <li>Render a list of CharComponent where each CharComponent receives a different letter of the entered text(in the initial input fiel) as a prop</li>\n           <li>When you click a CharComponent, it should be removed from the entered text.</li>\n         </ol>\n         <p>Hint: Keep in mind that Javascript strings are basically array!</p>\n     \n         <input type=\"text\" \n           onChange={this.inputChangedHandler}\n           value={this.state.userInput} \n         />\n          {/* /* Poder ver lo que ingresa en el input abajo. */ }\n         <p>{this.state.userInput}</p> \n\n          {/* Validar la longitud del texto con el length. Tarea N0 3*/}\n         < Validation inputLength= {this.state.userInput.length}/>\n         {charList}\n       </div>\n       \n      );\n    }\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}